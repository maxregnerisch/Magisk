name: Magisk Build

on:
  push:
    branches:
      - master
    paths:
      - "app/**"
      - "native/**"
      - "stub/**"
      - "buildSrc/**"
      - "build.py"
      - "gradle.properties"
      - ".github/workflows/build.yml"
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build Magisk artifacts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: pip3 install pyyaml pylzma setuptools build-essentials
        working-directory: .github/actions

      - name: Build Magisk Release
        run: python build.py -vr all

      - name: Build Magisk Debug
        run: python3 build.py -v all

      - name: Stop Gradle Daemon
        run: ./gradlew --stop

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          path: out

      - name: Upload Mapping and Native Debug Symbols
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-symbols
          path: app/build/outputs

  test-build:
    name: Test building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-14]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Build Debug
        run: python3 build.py -v all

      - name: Stop Gradle Daemon
        run: ./gradlew --stop

  test:
    name: Test on API ${{ matrix.api }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        api: [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
          path: out

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD Test
        run: scripts/avd_test.sh ${{ matrix.api }}
